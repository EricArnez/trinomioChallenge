{"version":3,"sources":["components/CourseCheckBox.jsx","components/CoursesCheckBoxs.jsx","components/AddCourseModal.jsx","components/PersonInfoForm.jsx","components/ModifyPersonModal.jsx","components/AddPersonModal.jsx","components/RemovePersonModal.jsx","components/PersonsDataTable.jsx","App.js","serviceWorker.js","index.js"],"names":["Checkbox","label","isSelected","onCheckboxChange","sendID","Label","CustomInput","type","name","defaultChecked","onChange","id","AddCourseModal","props","mapCoursesWithStateRegardingPerson","allCourses","result","forEach","course","courseWithState","courseStateRegardingPerson","getStateOfCourseRegardingPerson","push","courseID","person","courses","setMapCoursesWithStateRegardingPerson","axios","get","then","res","data","setState","coursesWithStateRegardingPerson","catch","error","response","window","alert","message","handleCheckboxChange","event","state","courseWithStateRegardingPerson","Number","target","updatePersonCourses","coursesCheckedResult","cWs","modifiedPersonCourses","put","refreshParentComponent","this","onRef","undefined","renderCheckBox","map","courseAndState","CourseCheckBox","key","Form","FormGroup","for","getPersonFullName","Component","toggleModal","isOpen","handleSubmit","a","async","child","Fragment","Button","color","onClick","Modal","autoFocus","ModalHeader","toggle","personFullName","ModalBody","ref","ModalFooter","PersonInfoForm","fNameValue","parentHandleFNameChange","lNameValue","parentHandleLNameChange","emailValue","parentHandleEmailChange","noValidate","value","placeholder","required","AddPersonModal","handleFNameChange","fName","handleLNameChange","lName","handleEmailChange","email","shouldSendAlert","sendProperAlert","modifiedPerson","first_name","last_name","hasEmptyFields","includes","hasInvalidEmail","newPerson","post","className","RemovePersonModal","hideConfirmation","modalIsHiden","handleRemove","delete","location","reload","hide","hideConfirmationState","PersonsDataTable","localStorage","setItem","setLastPersonPageFromRestAPI","lastPersonPageFromRestAPI","last_page","getPersonFullNameOfRecord","record","getPersonsDataFromAllPages","allPersons","lPageNumber","getPersonsDataFromPage","refreshComponent","persons","pageNumber","columns","text","align","sortable","width","cell","hideRemoveModals","config","page_size","length_menu","button","excel","print","extra","getItem","records","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac5c435f.chunk.js","sourcesContent":["import { Label, CustomInput } from \"reactstrap\";\r\nimport React from \"react\";\r\n\r\nconst Checkbox = ({ label, isSelected, onCheckboxChange, sendID }) => (\r\n  <div>\r\n    <Label>\r\n      <CustomInput\r\n        type=\"checkbox\"\r\n        name={label}\r\n        defaultChecked={isSelected}\r\n        onChange={onCheckboxChange}\r\n        id={sendID}\r\n      >\r\n        {label}\r\n      </CustomInput>\r\n    </Label>\r\n  </div>\r\n);\r\n\r\nexport default Checkbox;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, FormGroup, Label } from \"reactstrap\";\r\nimport CourseCheckBox from \"./CourseCheckBox\";\r\n\r\nexport default class AddCourseModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coursesWithStateRegardingPerson: []\r\n    };\r\n\r\n    this.setMapCoursesWithStateRegardingPerson();\r\n  }\r\n\r\n  mapCoursesWithStateRegardingPerson = allCourses => {\r\n    let result = [];\r\n    allCourses.forEach(course => {\r\n      let courseWithState = {\r\n        course: course,\r\n        courseStateRegardingPerson: this.getStateOfCourseRegardingPerson(\r\n          course.id\r\n        )\r\n      };\r\n      result.push(courseWithState);\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  getStateOfCourseRegardingPerson = courseID => {\r\n    let result = false;\r\n    this.props.person.courses.forEach(course => {\r\n      if (course.id === courseID) {\r\n        result = true;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  setMapCoursesWithStateRegardingPerson = () => {\r\n    axios\r\n      .get(\r\n        \"https://cors-anywhere.herokuapp.com/http://earnezinochea.challenge.trinom.io/api/courses\"\r\n      )\r\n      .then(res => {\r\n        let result = this.mapCoursesWithStateRegardingPerson(res.data);\r\n        this.setState({ coursesWithStateRegardingPerson: result });\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          window.alert(error.response.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  handleCheckboxChange = event => {\r\n    this.state.coursesWithStateRegardingPerson.forEach(\r\n      courseWithStateRegardingPerson => {\r\n        if (\r\n          courseWithStateRegardingPerson.course.id === Number(event.target.id)\r\n        ) {\r\n          courseWithStateRegardingPerson.courseStateRegardingPerson = !courseWithStateRegardingPerson.courseStateRegardingPerson;\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  updatePersonCourses = person => {\r\n    let coursesCheckedResult = [];\r\n\r\n    this.state.coursesWithStateRegardingPerson.forEach(cWs => {\r\n      if (cWs.courseStateRegardingPerson) {\r\n        coursesCheckedResult.push(cWs.course);\r\n      }\r\n    });\r\n    let modifiedPersonCourses = person;\r\n    modifiedPersonCourses.courses = coursesCheckedResult;\r\n\r\n    axios\r\n      .put(\r\n        \"https://cors-anywhere.herokuapp.com/http://earnezinochea.challenge.trinom.io/api/peoples/\" +\r\n          this.props.person.id,\r\n        modifiedPersonCourses\r\n      )\r\n      .then(res => {\r\n        this.props.refreshParentComponent();\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          window.alert(error.response.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let renderCheckBox = this.state.coursesWithStateRegardingPerson.map(\r\n      courseAndState => {\r\n        return (\r\n          <CourseCheckBox\r\n            label={courseAndState.course.name}\r\n            isSelected={courseAndState.courseStateRegardingPerson}\r\n            onCheckboxChange={this.handleCheckboxChange}\r\n            courseAndState={courseAndState}\r\n            key={courseAndState.course.id}\r\n            sendID={courseAndState.course.id}\r\n          />\r\n        );\r\n      }\r\n    );\r\n    return (\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"exampleCheckbox\">\r\n            Courses: {this.state.getPersonFullName}\r\n          </Label>\r\n          <div>{renderCheckBox}</div>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport CoursesCheckBoxs from \"./CoursesCheckBoxs\";\r\n\r\nexport default class AddCourseModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n    this.coursesWithStateRegardingPerson = [];\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    await this.child.updatePersonCourses(this.props.person);\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button color=\"primary\" onClick={this.toggleModal}>\r\n          Courses\r\n        </Button>\r\n        <Modal isOpen={this.state.isOpen} autoFocus={false}>\r\n          <ModalHeader toggle={this.toggleModal}>\r\n            Adding New Courses For {this.props.personFullName}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <CoursesCheckBoxs\r\n              person={this.props.person}\r\n              onRef={ref => (this.child = ref)}\r\n            />\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.handleSubmit}>\r\n              Submit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.toggleModal}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  AvForm,\r\n  AvGroup,\r\n  AvInput,\r\n  AvFeedback\r\n} from \"availity-reactstrap-validation\";\r\nimport { Label } from \"reactstrap\";\r\n\r\nconst PersonInfoForm = ({\r\n  fNameValue,\r\n  parentHandleFNameChange,\r\n  lNameValue,\r\n  parentHandleLNameChange,\r\n  emailValue,\r\n  parentHandleEmailChange\r\n}) => (\r\n  <React.Fragment>\r\n    <AvForm noValidate>\r\n      <AvGroup>\r\n        <Label>First Name</Label>\r\n        <AvInput\r\n          value={fNameValue}\r\n          type=\"First Name\"\r\n          name=\"First Name\"\r\n          id=\"firstName\"\r\n          placeholder=\"First Name...\"\r\n          onChange={parentHandleFNameChange}\r\n          autoFocus={true}\r\n          required\r\n        />\r\n        <AvFeedback>required</AvFeedback>\r\n      </AvGroup>\r\n\r\n      <AvGroup>\r\n        <Label>Last Name</Label>\r\n        <AvInput\r\n          value={lNameValue}\r\n          type=\"Last Name\"\r\n          name=\"Last Name\"\r\n          id=\"lastName\"\r\n          placeholder=\"Last Name...\"\r\n          onChange={parentHandleLNameChange}\r\n          required\r\n        />\r\n        <AvFeedback>required</AvFeedback>\r\n      </AvGroup>\r\n\r\n      <AvGroup>\r\n        <Label>Email</Label>\r\n        <AvInput\r\n          value={emailValue}\r\n          type=\"mail\"\r\n          name=\"Email\"\r\n          id=\"email\"\r\n          placeholder=\"Email...\"\r\n          onChange={parentHandleEmailChange}\r\n          required\r\n        />\r\n        <AvFeedback>required</AvFeedback>\r\n      </AvGroup>\r\n    </AvForm>\r\n  </React.Fragment>\r\n);\r\nexport default PersonInfoForm;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport CoursesCheckBoxs from \"./CoursesCheckBoxs\";\r\nimport PersonInfoForm from \"./PersonInfoForm\";\r\n\r\nexport default class AddPersonModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      fName: \"\",\r\n      lName: \"\",\r\n      email: \"\"\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  handleFNameChange = event => {\r\n    this.setState({ fName: event.target.value });\r\n  };\r\n  handleLNameChange = event => {\r\n    this.setState({ lName: event.target.value });\r\n  };\r\n  handleEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { first_name, last_name, email } = this.props.person;\r\n    this.setState({\r\n      fName: first_name,\r\n      lName: last_name,\r\n      email: email\r\n    });\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    if (this.shouldSendAlert()) {\r\n      this.sendProperAlert();\r\n    } else {\r\n      const modifiedPerson = {\r\n        first_name: this.state.fName,\r\n        last_name: this.state.lName,\r\n        email: this.state.email\r\n      };\r\n      axios\r\n        .put(\r\n          \"https://cors-anywhere.herokuapp.com/http://earnezinochea.challenge.trinom.io/api/peoples/\" +\r\n            this.props.person.id,\r\n          modifiedPerson\r\n        )\r\n        .then(res => {\r\n          this.child.updatePersonCourses(modifiedPerson);\r\n          this.props.refreshParentComponent();\r\n          this.setState({ isOpen: false });\r\n        })\r\n        .catch(error => {\r\n          if (error.response) {\r\n            window.alert(error.response.data.message);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  shouldSendAlert = () => {\r\n    return this.hasEmptyFields() || !this.state.email.includes(\"@\");\r\n  };\r\n\r\n  sendProperAlert = () => {\r\n    if (this.hasEmptyFields()) {\r\n      window.alert(\"please fill all the fields\");\r\n    } else if (this.hasInvalidEmail()) {\r\n      window.alert(\"invalid email\");\r\n    }\r\n  };\r\n\r\n  hasEmptyFields = () => {\r\n    let result = false;\r\n    result =\r\n      this.state.fName === \"\" ||\r\n      this.state.lName === \"\" ||\r\n      this.state.email === \"\";\r\n    return result;\r\n  };\r\n\r\n  hasInvalidEmail = () => {\r\n    return !this.state.email.includes(\"@\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button color=\"primary\" onClick={this.toggleModal}>\r\n          Modify Person\r\n        </Button>\r\n        <Modal isOpen={this.state.isOpen}>\r\n          <ModalHeader toggle={this.toggleModal}>\r\n            Modifying {this.props.personFullName}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <PersonInfoForm\r\n              parentHandleFNameChange={this.handleFNameChange}\r\n              parentHandleLNameChange={this.handleLNameChange}\r\n              parentHandleEmailChange={this.handleEmailChange}\r\n              emailValue={this.state.email}\r\n              fNameValue={this.state.fName}\r\n              lNameValue={this.state.lName}\r\n            />\r\n\r\n            <CoursesCheckBoxs\r\n              person={this.props.person}\r\n              onRef={ref => (this.child = ref)}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.handleSubmit}>\r\n              Submit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.toggleModal}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import PersonInfoForm from \"./PersonInfoForm\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nexport default class AddPersonModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      fName: \"\",\r\n      lName: \"\",\r\n      email: \"\"\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n    if (this.state.isOpen === false) {\r\n      this.setState({ fName: \"\", lName: \"\", email: \"\" });\r\n    }\r\n  };\r\n\r\n  handleFNameChange = event => {\r\n    this.setState({ fName: event.target.value });\r\n  };\r\n  handleLNameChange = event => {\r\n    this.setState({ lName: event.target.value });\r\n  };\r\n  handleEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    if (this.shouldSendAlert()) {\r\n      this.sendProperAlert();\r\n    } else {\r\n      const newPerson = {\r\n        first_name: this.state.fName,\r\n        last_name: this.state.lName,\r\n        email: this.state.email\r\n      };\r\n      axios\r\n        .post(\r\n          \"https://cors-anywhere.herokuapp.com/http://earnezinochea.challenge.trinom.io/api/peoples\",\r\n          newPerson\r\n        )\r\n        .then(res => {\r\n          this.props.refreshParentComponent();\r\n\r\n          this.setState({ isOpen: false });\r\n        })\r\n        .catch(error => {\r\n          if (error.response) {\r\n            window.alert(error.response.data.message);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  shouldSendAlert = () => {\r\n    return this.hasEmptyFields() || !this.state.email.includes(\"@\");\r\n  };\r\n\r\n  sendProperAlert = () => {\r\n    if (this.hasEmptyFields()) {\r\n      window.alert(\"please fill all the fields\");\r\n    } else if (this.hasInvalidEmail()) {\r\n      window.alert(\"invalid email\");\r\n    }\r\n  };\r\n\r\n  hasEmptyFields = () => {\r\n    let result = false;\r\n    result =\r\n      this.state.fName === \"\" ||\r\n      this.state.lName === \"\" ||\r\n      this.state.email === \"\";\r\n    return result;\r\n  };\r\n\r\n  hasInvalidEmail = () => {\r\n    return !this.state.email.includes(\"@\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button\r\n          className=\"mb-2\"\r\n          color=\"primary\"\r\n          onClick={this.toggleModal}\r\n          autoFocus\r\n        >\r\n          Add New Person\r\n        </Button>\r\n        <Modal isOpen={this.state.isOpen} autoFocus={false}>\r\n          <ModalHeader toggle={this.toggleModal}>\r\n            Adding a new person\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <PersonInfoForm\r\n              parentHandleFNameChange={this.handleFNameChange}\r\n              parentHandleLNameChange={this.handleLNameChange}\r\n              parentHandleEmailChange={this.handleEmailChange}\r\n              emailValue={this.state.email}\r\n              fNameValue={this.state.fName}\r\n              lNameValue={this.state.lName}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.handleSubmit}>\r\n              Submit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.toggleModal}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  CustomInput\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default class RemovePersonModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      hide: this.props.hideConfirmationState\r\n    };\r\n    this.modalIsHiden = false;\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  hideConfirmation = () => {\r\n    this.props.hideConfirmation();\r\n    this.modalIsHiden = true;\r\n  };\r\n\r\n  handleRemove = () => {\r\n    axios\r\n      .delete(\r\n        \"https://cors-anywhere.herokuapp.com/http://earnezinochea.challenge.trinom.io/api/peoples/\" +\r\n          this.props.person.id\r\n      )\r\n      .then(res => {\r\n        this.props.refreshParentComponent();\r\n      })\r\n      .catch(error => {\r\n        if (error.response) {\r\n          window.alert(error.response.data.message);\r\n        }\r\n      });\r\n    if (this.modalIsHiden) {\r\n      this.modalIsHiden = false;\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hide) {\r\n      return (\r\n        <Button color=\"danger\" onClick={this.handleRemove}>\r\n          Remove Person\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Button color=\"warning\" onClick={this.toggleModal}>\r\n            Remove Person?\r\n          </Button>\r\n          <Modal isOpen={this.state.isOpen}>\r\n            <ModalHeader toggle={this.toggleModal}>\r\n              Removing {this.props.personFullName}\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              are you sure that you want to delete {this.props.personFullName}?\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button\r\n                color=\"danger\"\r\n                className=\"m-1\"\r\n                onClick={this.handleRemove}\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Button onClick={this.toggleModal}>No</Button>\r\n            </ModalFooter>\r\n            <div>\r\n              <CustomInput\r\n                className=\"m-2\"\r\n                type=\"checkbox\"\r\n                onChange={this.hideConfirmation}\r\n                defaultChecked={this.state.hide}\r\n                id={this.props.person.id}\r\n              >\r\n                don't show me this message again\r\n              </CustomInput>\r\n            </div>\r\n          </Modal>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactDatatable from \"@ashvin27/react-datatable\";\r\nimport axios from \"axios\";\r\nimport AddCourseModal from \"./AddCourseModal\";\r\nimport ModifyPersonModal from \"./ModifyPersonModal\";\r\nimport AddPersonModal from \"./AddPersonModal\";\r\n\r\nimport RemovePersonModal from \"./RemovePersonModal\";\r\n\r\nexport default class PersonsDataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        key: \"first_name\",\r\n        text: \"First Name\",\r\n        className: \"name\",\r\n        align: \"left\",\r\n        sortable: true\r\n      },\r\n      {\r\n        key: \"last_name\",\r\n        text: \"Last Name\",\r\n        className: \"name\",\r\n        align: \"left\",\r\n        sortable: true\r\n      },\r\n      {\r\n        key: \"email\",\r\n        text: \"Email\",\r\n        className: \"postcode\",\r\n        sortable: true\r\n      },\r\n      {\r\n        key: \"Add Courses\",\r\n        text: \"Add Courses\",\r\n        className: \"action\",\r\n        width: 100,\r\n        align: \"left\",\r\n        sortable: false,\r\n        cell: record => {\r\n          let personFullName = this.getPersonFullNameOfRecord(record);\r\n\r\n          return (\r\n            <AddCourseModal\r\n              person={record}\r\n              personFullName={personFullName}\r\n              refreshParentComponent={this.refreshComponent}\r\n            />\r\n          );\r\n        }\r\n      },\r\n      {\r\n        key: \"Modify\",\r\n        text: \"Modify\",\r\n        className: \"action\",\r\n        width: 100,\r\n        align: \"left\",\r\n        sortable: false,\r\n        cell: record => {\r\n          let personFullName = this.getPersonFullNameOfRecord(record);\r\n          return (\r\n            <ModifyPersonModal\r\n              person={record}\r\n              personFullName={personFullName}\r\n              refreshParentComponent={this.refreshComponent}\r\n            />\r\n          );\r\n        }\r\n      },\r\n      {\r\n        key: \"Remove\",\r\n        text: \"Remove\",\r\n        className: \"action\",\r\n        width: 100,\r\n        align: \"left\",\r\n        sortable: false,\r\n        cell: record => {\r\n          let personFullName = this.getPersonFullNameOfRecord(record);\r\n          return (\r\n            <RemovePersonModal\r\n              person={record}\r\n              personFullName={personFullName}\r\n              refreshParentComponent={this.refreshComponent}\r\n              hideConfirmation={this.hideConfirmation}\r\n              hideConfirmationState={this.state.hideRemoveModals}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    this.config = {\r\n      page_size: 10,\r\n      length_menu: [10, 20, 50],\r\n      button: {\r\n        excel: false,\r\n        print: false,\r\n        extra: false\r\n      }\r\n    };\r\n\r\n    this.state = {\r\n      persons: [],\r\n      hideRemoveModals: localStorage.getItem(\"hideRemovModal\")\r\n    };\r\n\r\n    this.lastPersonPageFromRestAPI = 0;\r\n  }\r\n\r\n  hideConfirmation = () => {\r\n    localStorage.setItem(\"hideRemovModal\", true);\r\n  };\r\n\r\n  setLastPersonPageFromRestAPI = async () => {\r\n    await axios\r\n      .get(\r\n        \"https://cors-anywhere.herokuapp.com/http://earnezinochea.challenge.trinom.io/api/peoples\"\r\n      )\r\n      .then(res => {\r\n        this.lastPersonPageFromRestAPI = res.data.last_page;\r\n      });\r\n  };\r\n\r\n  getPersonFullNameOfRecord = record => {\r\n    return record.first_name + \" \" + record.last_name;\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ persons: await this.getPersonsDataFromAllPages() });\r\n  }\r\n\r\n  getPersonsDataFromAllPages = async () => {\r\n    await this.setLastPersonPageFromRestAPI();\r\n    let allPersons = [];\r\n    let lPageNumber = this.lastPersonPageFromRestAPI;\r\n    for (lPageNumber; lPageNumber > 0; lPageNumber--) {\r\n      await (await this.getPersonsDataFromPage(lPageNumber)).forEach(person => {\r\n        allPersons.push(person);\r\n      });\r\n    }\r\n    return allPersons;\r\n  };\r\n\r\n  refreshComponent = async () => {\r\n    let allPersons = await this.getPersonsDataFromAllPages();\r\n    this.setState({ persons: allPersons });\r\n  };\r\n\r\n  getPersonsDataFromPage = async pageNumber => {\r\n    let result = [];\r\n    await axios\r\n      .get(\r\n        \"https://cors-anywhere.herokuapp.com/http://earnezinochea.challenge.trinom.io/api/peoples?page=\" +\r\n          pageNumber\r\n      )\r\n      .then(res => {\r\n        result = res.data.data;\r\n        return result;\r\n      });\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AddPersonModal refreshParentComponent={this.refreshComponent} />\r\n\r\n        <ReactDatatable\r\n          config={this.config}\r\n          records={this.state.persons}\r\n          columns={this.columns}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PersonsDataTable from \"./components/PersonsDataTable\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App container\">\r\n      <PersonsDataTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}